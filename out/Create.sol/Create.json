{"abi":[{"type":"receive","stateMutability":"payable"},{"type":"function","name":"computeAddress","inputs":[{"name":"addr","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"deploy","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"bytecode","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"newContract","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"event","name":"ContractCreation","inputs":[{"name":"newContract","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"error","name":"Failed","inputs":[{"name":"emitter","type":"address","internalType":"address"}]},{"type":"error","name":"InsufficientBalance","inputs":[{"name":"emitter","type":"address","internalType":"address"}]},{"type":"error","name":"InvalidNonceValue","inputs":[{"name":"emitter","type":"address","internalType":"address"}]},{"type":"error","name":"ZeroBytecodeLength","inputs":[{"name":"emitter","type":"address","internalType":"address"}]}],"bytecode":{"object":"0x6080604052348015600f57600080fd5b506106db8061001f6000396000f3fe60806040526004361061002d5760003560e01c806336b5aa2d1461003957806361ff715f1461007557600080fd5b3661003457005b600080fd5b34801561004557600080fd5b50610059610054366004610566565b610095565b6040516001600160a01b03909116815260200160405180910390f35b34801561008157600080fd5b506100596100903660046105b4565b6104a8565b60006060602560fa1b6100b1600167ffffffffffffffff610677565b67ffffffffffffffff168411156100e257604051633c55ab3b60e01b81523060048201526024015b60405180910390fd5b8360000361013f57604051606b60f91b60208201526001600160f81b0319821660218201526001600160601b0319606087901b166022820152600160ff1b60368201526037015b6040516020818303038152906040529150610496565b607f841161018c57604051606b60f91b60208201526001600160f81b031980831660218301526001600160601b0319606088901b16602283015260f886901b166036820152603701610129565b60ff84116101e35760405160d760f81b60208201526001600160f81b031980831660218301526001600160601b0319606088901b166022830152608160f81b603683015260f886901b166037820152603801610129565b61ffff841161024357604051601b60fb1b60208201526001600160f81b0319821660218201526001600160601b0319606087901b166022820152604160f91b60368201526001600160f01b031960f086901b166037820152603901610129565b62ffffff84116102a45760405160d960f81b60208201526001600160f81b0319821660218201526001600160601b0319606087901b166022820152608360f81b60368201526001600160e81b031960e886901b166037820152603a01610129565b63ffffffff841161030657604051606d60f91b60208201526001600160f81b0319821660218201526001600160601b0319606087901b166022820152602160fa1b60368201526001600160e01b031960e086901b166037820152603b01610129565b64ffffffffff84116103695760405160db60f81b60208201526001600160f81b0319821660218201526001600160601b0319606087901b166022820152608560f81b60368201526001600160d81b031960d886901b166037820152603c01610129565b65ffffffffffff84116103cd57604051603760fa1b60208201526001600160f81b0319821660218201526001600160601b0319606087901b166022820152604360f91b60368201526001600160d01b031960d086901b166037820152603d01610129565b66ffffffffffffff84116104325760405160dd60f81b60208201526001600160f81b0319821660218201526001600160601b0319606087901b166022820152608760f81b60368201526001600160c81b031960c886901b166037820152603e01610129565b604051606f60f91b60208201526001600160f81b0319821660218201526001600160601b0319606087901b166022820152601160fb1b60368201526001600160c01b031960c086901b166037820152603f0160405160208183030381529060405291505b50805160209091012090505b92915050565b6000824710156104cd5760405163112fed8b60e31b81523060048201526024016100d9565b81516000036104f1576040516378506c0d60e01b81523060048201526024016100d9565b81516020830184f090506001600160a01b0381166105245760405163b05e40a960e01b81523060048201526024016100d9565b6040516001600160a01b03821681527f4db17dd5e4732fb6da34a148104a592783ca119a1e7bb8829eba6cbadef0b5119060200160405180910390a192915050565b6000806040838503121561057957600080fd5b82356001600160a01b038116811461059057600080fd5b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156105c757600080fd5b82359150602083013567ffffffffffffffff8111156105e557600080fd5b8301601f810185136105f657600080fd5b803567ffffffffffffffff8111156106105761061061059e565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561063f5761063f61059e565b60405281815282820160200187101561065757600080fd5b816020840160208301376000602083830101528093505050509250929050565b67ffffffffffffffff82811682821603908111156104a257634e487b7160e01b600052601160045260246000fdfea26469706673582212201124e120a7ef24708140b1bf45af9dd51b51d473bc71f0c2aaae36be0e226ae464736f6c634300081a0033","sourceMap":"1053:5928:46:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x60806040526004361061002d5760003560e01c806336b5aa2d1461003957806361ff715f1461007557600080fd5b3661003457005b600080fd5b34801561004557600080fd5b50610059610054366004610566565b610095565b6040516001600160a01b03909116815260200160405180910390f35b34801561008157600080fd5b506100596100903660046105b4565b6104a8565b60006060602560fa1b6100b1600167ffffffffffffffff610677565b67ffffffffffffffff168411156100e257604051633c55ab3b60e01b81523060048201526024015b60405180910390fd5b8360000361013f57604051606b60f91b60208201526001600160f81b0319821660218201526001600160601b0319606087901b166022820152600160ff1b60368201526037015b6040516020818303038152906040529150610496565b607f841161018c57604051606b60f91b60208201526001600160f81b031980831660218301526001600160601b0319606088901b16602283015260f886901b166036820152603701610129565b60ff84116101e35760405160d760f81b60208201526001600160f81b031980831660218301526001600160601b0319606088901b166022830152608160f81b603683015260f886901b166037820152603801610129565b61ffff841161024357604051601b60fb1b60208201526001600160f81b0319821660218201526001600160601b0319606087901b166022820152604160f91b60368201526001600160f01b031960f086901b166037820152603901610129565b62ffffff84116102a45760405160d960f81b60208201526001600160f81b0319821660218201526001600160601b0319606087901b166022820152608360f81b60368201526001600160e81b031960e886901b166037820152603a01610129565b63ffffffff841161030657604051606d60f91b60208201526001600160f81b0319821660218201526001600160601b0319606087901b166022820152602160fa1b60368201526001600160e01b031960e086901b166037820152603b01610129565b64ffffffffff84116103695760405160db60f81b60208201526001600160f81b0319821660218201526001600160601b0319606087901b166022820152608560f81b60368201526001600160d81b031960d886901b166037820152603c01610129565b65ffffffffffff84116103cd57604051603760fa1b60208201526001600160f81b0319821660218201526001600160601b0319606087901b166022820152604360f91b60368201526001600160d01b031960d086901b166037820152603d01610129565b66ffffffffffffff84116104325760405160dd60f81b60208201526001600160f81b0319821660218201526001600160601b0319606087901b166022820152608760f81b60368201526001600160c81b031960c886901b166037820152603e01610129565b604051606f60f91b60208201526001600160f81b0319821660218201526001600160601b0319606087901b166022820152601160fb1b60368201526001600160c01b031960c086901b166037820152603f0160405160208183030381529060405291505b50805160209091012090505b92915050565b6000824710156104cd5760405163112fed8b60e31b81523060048201526024016100d9565b81516000036104f1576040516378506c0d60e01b81523060048201526024016100d9565b81516020830184f090506001600160a01b0381166105245760405163b05e40a960e01b81523060048201526024016100d9565b6040516001600160a01b03821681527f4db17dd5e4732fb6da34a148104a592783ca119a1e7bb8829eba6cbadef0b5119060200160405180910390a192915050565b6000806040838503121561057957600080fd5b82356001600160a01b038116811461059057600080fd5b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156105c757600080fd5b82359150602083013567ffffffffffffffff8111156105e557600080fd5b8301601f810185136105f657600080fd5b803567ffffffffffffffff8111156106105761061061059e565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561063f5761063f61059e565b60405281815282820160200187101561065757600080fd5b816020840160208301376000602083830101528093505050509250929050565b67ffffffffffffffff82811682821603908111156104a257634e487b7160e01b600052601160045260246000fdfea26469706673582212201124e120a7ef24708140b1bf45af9dd51b51d473bc71f0c2aaae36be0e226ae464736f6c634300081a0033","sourceMap":"1053:5928:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4337:2496;;;;;;;;;;-1:-1:-1;4337:2496:46;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;589:32:64;;;571:51;;559:2;544:18;4337:2496:46;;;;;;;1619:1911;;;;;;;;;;-1:-1:-1;1619:1911:46;;;;;:::i;:::-;;:::i;4337:2496::-;4411:7;4430:17;-1:-1:-1;;;4681:20:46;4700:1;4681:16;:20;:::i;:::-;4673:28;;:5;:28;4669:73;;;4710:32;;-1:-1:-1;;;4710:32:46;;4736:4;4710:32;;;571:51:64;544:18;;4710:32:46;;;;;;;;4669:73;4943:5;4952:4;4943:13;4939:1827;;4965:55;;-1:-1:-1;;;4965:55:46;;;2331:39:64;-1:-1:-1;;;;;;2399:26:64;;2386:11;;;2379:47;-1:-1:-1;;;;;;2463:2:64;2459:15;;;2455:53;2442:11;;;2435:74;-1:-1:-1;;;2525:12:64;;;2518:48;2582:12;;4965:55:46;;;;;;;;;;;;;4958:62;;4939:1827;;;5249:4;5240:5;:13;5236:1530;;5262:55;;-1:-1:-1;;;5262:55:46;;;2810:39:64;-1:-1:-1;;;;;;2878:26:64;;;2865:11;;;2858:47;-1:-1:-1;;;;;;2942:2:64;2938:15;;;2934:53;2921:11;;;2914:74;2838:3;3022:16;;;3018:36;3004:12;;;2997:58;3071:12;;5262:55:46;2605:484:64;5236:1530:46;5843:15;5834:24;;5830:936;;5867:69;;-1:-1:-1;;;5867:69:46;;;3325:39:64;-1:-1:-1;;;;;;3393:26:64;;;3380:11;;;3373:47;-1:-1:-1;;;;;;3457:2:64;3453:15;;;3449:53;3436:11;;;3429:74;-1:-1:-1;;;3519:12:64;;;3512:48;3353:3;3594:16;;;3590:36;3576:12;;;3569:58;3643:12;;5867:69:46;3094:567:64;5830:936:46;5964:16;5955:25;;5951:815;;5989:70;;-1:-1:-1;;;5989:70:46;;;3899:39:64;-1:-1:-1;;;;;;3967:26:64;;3954:11;;;3947:47;-1:-1:-1;;;;;;4031:2:64;4027:15;;;4023:53;4010:11;;;4003:74;-1:-1:-1;;;4093:12:64;;;4086:48;-1:-1:-1;;;;;;4190:3:64;4168:16;;;4164:38;4150:12;;;4143:60;4219:12;;5989:70:46;3666:571:64;5951:815:46;6087:16;6078:25;;6074:692;;6112:70;;-1:-1:-1;;;6112:70:46;;;4475:39:64;-1:-1:-1;;;;;;4543:26:64;;4530:11;;;4523:47;-1:-1:-1;;;;;;4607:2:64;4603:15;;;4599:53;4586:11;;;4579:74;-1:-1:-1;;;4669:12:64;;;4662:48;-1:-1:-1;;;;;;4766:3:64;4744:16;;;4740:41;4726:12;;;4719:63;4798:12;;6112:70:46;4242:574:64;6074:692:46;6210:16;6201:25;;6197:569;;6235:70;;-1:-1:-1;;;6235:70:46;;;5054:39:64;-1:-1:-1;;;;;;5122:26:64;;5109:11;;;5102:47;-1:-1:-1;;;;;;5186:2:64;5182:15;;;5178:53;5165:11;;;5158:74;-1:-1:-1;;;5248:12:64;;;5241:48;-1:-1:-1;;;;;;5345:3:64;5323:16;;;5319:43;5305:12;;;5298:65;5379:12;;6235:70:46;4821:576:64;6197:569:46;6333:16;6324:25;;6320:446;;6358:70;;-1:-1:-1;;;6358:70:46;;;5635:39:64;-1:-1:-1;;;;;;5703:26:64;;5690:11;;;5683:47;-1:-1:-1;;;;;;5767:2:64;5763:15;;;5759:53;5746:11;;;5739:74;-1:-1:-1;;;5829:12:64;;;5822:48;-1:-1:-1;;;;;;5926:3:64;5904:16;;;5900:45;5886:12;;;5879:67;5962:12;;6358:70:46;5402:578:64;6320:446:46;6456:16;6447:25;;6443:323;;6481:70;;-1:-1:-1;;;6481:70:46;;;6218:39:64;-1:-1:-1;;;;;;6286:26:64;;6273:11;;;6266:47;-1:-1:-1;;;;;;6350:2:64;6346:15;;;6342:53;6329:11;;;6322:74;-1:-1:-1;;;6412:12:64;;;6405:48;-1:-1:-1;;;;;;6509:3:64;6487:16;;;6483:47;6469:12;;;6462:69;6547:12;;6481:70:46;5985:580:64;6443:323:46;6579:16;6570:25;;6566:200;;6604:70;;-1:-1:-1;;;6604:70:46;;;6803:39:64;-1:-1:-1;;;;;;6871:26:64;;6858:11;;;6851:47;-1:-1:-1;;;;;;6935:2:64;6931:15;;;6927:53;6914:11;;;6907:74;-1:-1:-1;;;6997:12:64;;;6990:48;-1:-1:-1;;;;;;7094:3:64;7072:16;;;7068:49;7054:12;;;7047:71;7134:12;;6604:70:46;6570:582:64;6566:200:46;6696:70;;-1:-1:-1;;;6696:70:46;;;7390:39:64;-1:-1:-1;;;;;;7458:26:64;;7445:11;;;7438:47;-1:-1:-1;;;;;;7522:2:64;7518:15;;;7514:53;7501:11;;;7494:74;-1:-1:-1;;;7584:12:64;;;7577:48;-1:-1:-1;;;;;;7681:3:64;7659:16;;;7655:51;7641:12;;;7634:73;7723:12;;6696:70:46;;;;;;;;;;;;6689:77;;6566:200;-1:-1:-1;6808:15:46;;;;;;;;-1:-1:-1;4337:2496:46;;;;;:::o;1619:1911::-;1706:19;1769:6;1745:21;:30;1741:89;;;1796:34;;-1:-1:-1;;;1796:34:46;;1824:4;1796:34;;;571:51:64;544:18;;1796:34:46;425:203:64;1741:89:46;1844:8;:15;1863:1;1844:20;1840:66;;1873:33;;-1:-1:-1;;;1873:33:46;;1900:4;1873:33;;;571:51:64;544:18;;1873:33:46;425:203:64;1840:66:46;3363:8;3357:15;3350:4;3340:8;3336:19;3328:6;3321:52;3306:67;-1:-1:-1;;;;;;3396:25:46;;3392:59;;3430:21;;-1:-1:-1;;;3430:21:46;;3445:4;3430:21;;;571:51:64;544:18;;3430:21:46;425:203:64;3392:59:46;3466:29;;-1:-1:-1;;;;;589:32:64;;571:51;;3466:29:46;;559:2:64;544:18;3466:29:46;;;;;;;1619:1911;;;;:::o;14:406:64:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;185:23;;-1:-1:-1;;;;;237:31:64;;227:42;;217:70;;283:1;280;273:12;217:70;306:5;384:2;369:18;;;;356:32;;-1:-1:-1;;;14:406:64:o;633:127::-;694:10;689:3;685:20;682:1;675:31;725:4;722:1;715:15;749:4;746:1;739:15;765:1058;842:6;850;903:2;891:9;882:7;878:23;874:32;871:52;;;919:1;916;909:12;871:52;964:23;;;-1:-1:-1;1062:2:64;1047:18;;1034:32;1089:18;1078:30;;1075:50;;;1121:1;1118;1111:12;1075:50;1144:22;;1197:4;1189:13;;1185:27;-1:-1:-1;1175:55:64;;1226:1;1223;1216:12;1175:55;1266:2;1253:16;1292:18;1284:6;1281:30;1278:56;;;1314:18;;:::i;:::-;1363:2;1357:9;1455:2;1417:17;;-1:-1:-1;;1413:31:64;;;1446:2;1409:40;1405:54;1393:67;;1490:18;1475:34;;1511:22;;;1472:62;1469:88;;;1537:18;;:::i;:::-;1573:2;1566:22;1597;;;1638:15;;;1655:2;1634:24;1631:37;-1:-1:-1;1628:57:64;;;1681:1;1678;1671:12;1628:57;1737:6;1732:2;1728;1724:11;1719:2;1711:6;1707:15;1694:50;1790:1;1785:2;1776:6;1768;1764:19;1760:28;1753:39;1811:6;1801:16;;;;;765:1058;;;;;:::o;1828:291::-;1933:18;1926:26;;;1898;;;1894:59;;1965:28;;1962:151;;;2035:10;2030:3;2026:20;2023:1;2016:31;2070:4;2067:1;2060:15;2098:4;2095:1;2088:15","linkReferences":{}},"methodIdentifiers":{"computeAddress(address,uint256)":"36b5aa2d","deploy(uint256,bytes)":"61ff715f"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"Failed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"InvalidNonceValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"ZeroBytecodeLength\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractCreation\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Pascal Marco Caversaccio, pascal.caversaccio@hotmail.ch\",\"details\":\"Adjusted from here: https://github.com/safe-global/safe-contracts/blob/main/contracts/libraries/CreateCall.sol.\",\"errors\":{\"Failed(address)\":[{\"details\":\"Error that occurs when the contract creation failed.\",\"params\":{\"emitter\":\"The contract that emits the error.\"}}],\"InsufficientBalance(address)\":[{\"details\":\"Error that occurs when the factory contract has insufficient balance.\",\"params\":{\"emitter\":\"The contract that emits the error.\"}}],\"InvalidNonceValue(address)\":[{\"details\":\"Error that occurs when the nonce value is invalid.\",\"params\":{\"emitter\":\"The contract that emits the error.\"}}],\"ZeroBytecodeLength(address)\":[{\"details\":\"Error that occurs when the bytecode length is zero.\",\"params\":{\"emitter\":\"The contract that emits the error.\"}}]},\"events\":{\"ContractCreation(address)\":{\"details\":\"Event that is emitted when a contract is successfully created.\",\"params\":{\"newContract\":\"The address of the new contract.\"}}},\"kind\":\"dev\",\"methods\":{\"computeAddress(address,uint256)\":{\"details\":\"Returns the address where a contract will be stored if deployed via `deploy`. For the specification of the Recursive Length Prefix (RLP) encoding scheme, please refer to p. 19 of the Ethereum Yellow Paper (https://ethereum.github.io/yellowpaper/paper.pdf) and the Ethereum Wiki (https://eth.wiki/fundamentals/rlp). For further insights also, see the following issue: https://github.com/Rari-Capital/solmate/issues/207. Based on the EIP-161 (https://github.com/ethereum/EIPs/blob/master/EIPS/eip-161.md) specification, all contract accounts on the Ethereum mainnet are initiated with `nonce = 1`. Thus, the first contract address created by another contract is calculated with a non-zero nonce.\"},\"deploy(uint256,bytes)\":{\"details\":\"The function `deploy` deploys a new contract via calling the `CREATE` opcode and using the creation bytecode as input.\",\"params\":{\"amount\":\"The value in wei to send to the new account. If `amount` is non-zero, `bytecode` must have a `payable` constructor.\",\"bytecode\":\"The creation bytecode.\"}}},\"title\":\"CREATE Deployer Smart Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Helper smart contract to make easier and safer usage of the `CREATE` EVM opcode.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/utils/Create.sol\":\"Create\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\",\":utils/=lib/utils/\"]},\"sources\":{\"lib/utils/Create.sol\":{\"keccak256\":\"0x489eb800107e453a9ce95ff78bc26381c5fdf2af712ac6d4ec0989614f3e8ac5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e66ba714ef57d71eddc79070273ffbec1b2de3fa574a119936cd95a3c1a3a98a\",\"dweb:/ipfs/QmdR5GBSA5g4J6sANDMe8cy6Pm189kT9KnHchSYjFXok1o\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"type":"error","name":"Failed"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"type":"error","name":"InsufficientBalance"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"type":"error","name":"InvalidNonceValue"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"type":"error","name":"ZeroBytecodeLength"},{"inputs":[{"internalType":"address","name":"newContract","type":"address","indexed":false}],"type":"event","name":"ContractCreation","anonymous":false},{"inputs":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function","name":"computeAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"bytecode","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"deploy","outputs":[{"internalType":"address","name":"newContract","type":"address"}]},{"inputs":[],"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"computeAddress(address,uint256)":{"details":"Returns the address where a contract will be stored if deployed via `deploy`. For the specification of the Recursive Length Prefix (RLP) encoding scheme, please refer to p. 19 of the Ethereum Yellow Paper (https://ethereum.github.io/yellowpaper/paper.pdf) and the Ethereum Wiki (https://eth.wiki/fundamentals/rlp). For further insights also, see the following issue: https://github.com/Rari-Capital/solmate/issues/207. Based on the EIP-161 (https://github.com/ethereum/EIPs/blob/master/EIPS/eip-161.md) specification, all contract accounts on the Ethereum mainnet are initiated with `nonce = 1`. Thus, the first contract address created by another contract is calculated with a non-zero nonce."},"deploy(uint256,bytes)":{"details":"The function `deploy` deploys a new contract via calling the `CREATE` opcode and using the creation bytecode as input.","params":{"amount":"The value in wei to send to the new account. If `amount` is non-zero, `bytecode` must have a `payable` constructor.","bytecode":"The creation bytecode."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","forge-std/=lib/forge-std/src/","utils/=lib/utils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/utils/Create.sol":"Create"},"evmVersion":"paris","libraries":{}},"sources":{"lib/utils/Create.sol":{"keccak256":"0x489eb800107e453a9ce95ff78bc26381c5fdf2af712ac6d4ec0989614f3e8ac5","urls":["bzz-raw://e66ba714ef57d71eddc79070273ffbec1b2de3fa574a119936cd95a3c1a3a98a","dweb:/ipfs/QmdR5GBSA5g4J6sANDMe8cy6Pm189kT9KnHchSYjFXok1o"],"license":"MIT"}},"version":1},"id":46}